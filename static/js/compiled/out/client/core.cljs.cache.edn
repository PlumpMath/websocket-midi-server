{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{uuid?}, :name client.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, alandipert.storage-atom alandipert.storage-atom, cljsjs.socket-io cljsjs.socket-io}, :uses {atom reagent.core, local-storage alandipert.storage-atom}, :defs {hello-world {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 31, :column 7, :end-line 31, :end-column 18, :arglists (quote ([]))}, :name client.core/hello-world, :variadic false, :file "src/client/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, prefs {:name client.core/prefs, :file "src/client/core.cljs", :line 34, :column 1, :end-line 34, :end-column 11, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 34, :column 6, :end-line 34, :end-column 11}}, central-note-on {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 92, :column 7, :end-line 92, :end-column 22, :arglists (quote ([dev pitch t]))}, :name client.core/central-note-on, :variadic false, :file "src/client/core.cljs", :end-column 22, :method-params ([dev pitch t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 3, :fn-var true, :arglists (quote ([dev pitch t]))}, SUMMING {:name client.core/SUMMING, :file "src/client/core.cljs", :line 14, :column 1, :end-line 14, :end-column 13, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 14, :column 6, :end-line 14, :end-column 13}}, LIST {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 192, :column 7, :end-line 192, :end-column 11, :arglists (quote ([])), :doc "List of MIDI devices."}, :name client.core/LIST, :variadic false, :file "src/client/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "List of MIDI devices."}, set-row {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 26, :column 7, :end-line 26, :end-column 14, :arglists (quote ([i html]))}, :name client.core/set-row, :variadic false, :file "src/client/core.cljs", :end-column 14, :method-params ([i html]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([i html]))}, note-off {:name client.core/note-off, :file "src/client/core.cljs", :line 167, :column 1, :end-line 167, :end-column 14, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 167, :column 6, :end-line 167, :end-column 14}}, note-on-latch {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 151, :column 7, :end-line 151, :end-column 20, :arglists (quote ([midi]))}, :name client.core/note-on-latch, :variadic false, :file "src/client/core.cljs", :end-column 20, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, CONTROLLERS {:name client.core/CONTROLLERS, :file "src/client/core.cljs", :line 169, :column 1, :end-line 169, :end-column 17, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 169, :column 6, :end-line 169, :end-column 17}}, note-name {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 67, :column 7, :end-line 67, :end-column 16, :arglists (quote ([pitch]))}, :name client.core/note-name, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([pitch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pitch]))}, socket {:name client.core/socket, :file "src/client/core.cljs", :line 65, :column 1, :end-line 65, :end-column 12, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 65, :column 6, :end-line 65, :end-column 12}}, PITCH-BASE {:name client.core/PITCH-BASE, :file "src/client/core.cljs", :line 15, :column 1, :end-line 15, :end-column 16, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 15, :column 6, :end-line 15, :end-column 16}}, HOST {:name client.core/HOST, :file "src/client/core.cljs", :line 10, :column 1, :end-line 10, :end-column 10, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 10, :column 6, :end-line 10, :end-column 10}}, LATCHING {:name client.core/LATCHING, :file "src/client/core.cljs", :line 13, :column 1, :end-line 13, :end-column 14, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 13, :column 6, :end-line 13, :end-column 14}}, note-on {:name client.core/note-on, :file "src/client/core.cljs", :line 166, :column 1, :end-line 166, :end-column 13, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 166, :column 6, :end-line 166, :end-column 13}}, note-off-latch {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 163, :column 7, :end-line 163, :end-column 21, :arglists (quote ([midi]))}, :name client.core/note-off-latch, :variadic false, :file "src/client/core.cljs", :end-column 21, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, camera-row {:name client.core/camera-row, :file "src/client/core.cljs", :line 52, :column 1, :end-line 52, :end-column 16, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 52, :column 6, :end-line 52, :end-column 16}}, central-note-off {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 100, :column 7, :end-line 100, :end-column 23, :arglists (quote ([dev pitch t]))}, :name client.core/central-note-off, :variadic false, :file "src/client/core.cljs", :end-column 23, :method-params ([dev pitch t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 3, :fn-var true, :arglists (quote ([dev pitch t]))}, note-off-normal {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 146, :column 7, :end-line 146, :end-column 22, :arglists (quote ([midi]))}, :name client.core/note-off-normal, :variadic false, :file "src/client/core.cljs", :end-column 22, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, app-state {:name client.core/app-state, :file "src/client/core.cljs", :line 19, :column 1, :end-line 19, :end-column 19, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 19, :column 10, :end-line 19, :end-column 19}}, show-latch {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 138, :column 7, :end-line 138, :end-column 17, :arglists (quote ([how pitch]))}, :name client.core/show-latch, :variadic false, :file "src/client/core.cljs", :end-column 17, :method-params ([how pitch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 2, :fn-var true, :arglists (quote ([how pitch]))}, note-on-normal {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 141, :column 7, :end-line 141, :end-column 21, :arglists (quote ([midi]))}, :name client.core/note-on-normal, :variadic false, :file "src/client/core.cljs", :end-column 21, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, when-MIDI {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 75, :column 7, :end-line 75, :end-column 16, :arglists (quote ([f]))}, :name client.core/when-MIDI, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, MAIN_SITE {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 110, :column 7, :end-line 110, :end-column 16, :arglists (quote ([])), :doc "Respond to MIDI coming in from the server, send to modular."}, :name client.core/MAIN_SITE, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Respond to MIDI coming in from the server, send to modular."}, INSTRUMENTS {:name client.core/INSTRUMENTS, :file "src/client/core.cljs", :line 108, :column 1, :end-line 108, :end-column 17, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 108, :column 6, :end-line 108, :end-column 17}}, SATELLITE {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 171, :column 7, :end-line 171, :end-column 16, :arglists (quote ([])), :doc "Take MIDI from foot switch, send up to server."}, :name client.core/SATELLITE, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Take MIDI from foot switch, send up to server."}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 210, :column 7, :end-line 210, :end-column 19, :arglists (quote ([]))}, :name client.core/on-js-reload, :variadic false, :file "src/client/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, put-latched-total {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 81, :column 7, :end-line 81, :end-column 24, :arglists (quote ([dev app]))}, :name client.core/put-latched-total, :variadic false, :file "src/client/core.cljs", :end-column 24, :method-params ([dev app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dev app]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:satellite-state :latched-set :frameBorder :ul :key :local-time :latch :content :li :iframe :width :msg :pitch :src :id-prefs :div :c :div.row :central-state :off :changed :autoPlay :div.col-md-12 :h2 :on :h3 :midi :div.col-md-12.cam :incoming :height}, :order [:content :satellite-state :central-state :div :div.row :div.col-md-12 :h2 :latch :latched-set :c :incoming :id-prefs :changed :ul :li :key :local-time :msg :pitch :div.col-md-12.cam :iframe :src :width :height :frameBorder :autoPlay :h3 :on :off :midi]}, :doc nil}