{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name client.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, cljsjs.socket-io cljsjs.socket-io}, :uses {atom reagent.core}, :defs {hello-world {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 21, :column 7, :end-line 21, :end-column 18, :arglists (quote ([]))}, :name client.core/hello-world, :variadic false, :file "src/client/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, central-note-on {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 62, :column 7, :end-line 62, :end-column 22, :arglists (quote ([dev pitch]))}, :name client.core/central-note-on, :variadic false, :file "src/client/core.cljs", :end-column 22, :method-params ([dev pitch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dev pitch]))}, SUMMING {:name client.core/SUMMING, :file "src/client/core.cljs", :line 12, :column 1, :end-line 12, :end-column 13, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 12, :column 6, :end-line 12, :end-column 13}}, LIST {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 166, :column 7, :end-line 166, :end-column 11, :arglists (quote ([])), :doc "List of MIDI devices."}, :name client.core/LIST, :variadic false, :file "src/client/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "List of MIDI devices."}, note-off {:name client.core/note-off, :file "src/client/core.cljs", :line 132, :column 1, :end-line 132, :end-column 14, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 132, :column 6, :end-line 132, :end-column 14}}, note-on-latch {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 117, :column 7, :end-line 117, :end-column 20, :arglists (quote ([midi]))}, :name client.core/note-on-latch, :variadic false, :file "src/client/core.cljs", :end-column 20, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, CONTROLLERS {:name client.core/CONTROLLERS, :file "src/client/core.cljs", :line 134, :column 1, :end-line 134, :end-column 17, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 134, :column 6, :end-line 134, :end-column 17}}, note-name {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 32, :column 7, :end-line 32, :end-column 16, :arglists (quote ([pitch]))}, :name client.core/note-name, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([pitch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pitch]))}, socket {:name client.core/socket, :file "src/client/core.cljs", :line 30, :column 1, :end-line 30, :end-column 12, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 30, :column 6, :end-line 30, :end-column 12}}, PITCH-BASE {:name client.core/PITCH-BASE, :file "src/client/core.cljs", :line 13, :column 1, :end-line 13, :end-column 16, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 13, :column 6, :end-line 13, :end-column 16}}, HOST {:name client.core/HOST, :file "src/client/core.cljs", :line 8, :column 1, :end-line 8, :end-column 10, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 8, :column 6, :end-line 8, :end-column 10}}, LATCHING {:name client.core/LATCHING, :file "src/client/core.cljs", :line 11, :column 1, :end-line 11, :end-column 14, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 11, :column 6, :end-line 11, :end-column 14}}, note-on {:name client.core/note-on, :file "src/client/core.cljs", :line 131, :column 1, :end-line 131, :end-column 13, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 131, :column 6, :end-line 131, :end-column 13}}, note-off-latch {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 128, :column 7, :end-line 128, :end-column 21, :arglists (quote ([midi]))}, :name client.core/note-off-latch, :variadic false, :file "src/client/core.cljs", :end-column 21, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, central-note-off {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 68, :column 7, :end-line 68, :end-column 23, :arglists (quote ([dev pitch]))}, :name client.core/central-note-off, :variadic false, :file "src/client/core.cljs", :end-column 23, :method-params ([dev pitch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dev pitch]))}, note-off-normal {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 113, :column 7, :end-line 113, :end-column 22, :arglists (quote ([midi]))}, :name client.core/note-off-normal, :variadic false, :file "src/client/core.cljs", :end-column 22, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, app-state {:name client.core/app-state, :file "src/client/core.cljs", :line 17, :column 1, :end-line 17, :end-column 19, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 17, :column 10, :end-line 17, :end-column 19}}, show-latch {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 104, :column 7, :end-line 104, :end-column 17, :arglists (quote ([how pitch]))}, :name client.core/show-latch, :variadic false, :file "src/client/core.cljs", :end-column 17, :method-params ([how pitch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([how pitch]))}, note-on-normal {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 109, :column 7, :end-line 109, :end-column 21, :arglists (quote ([midi]))}, :name client.core/note-on-normal, :variadic false, :file "src/client/core.cljs", :end-column 21, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, when-MIDI {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 40, :column 7, :end-line 40, :end-column 16, :arglists (quote ([f]))}, :name client.core/when-MIDI, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, MAIN_SITE {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 76, :column 7, :end-line 76, :end-column 16, :arglists (quote ([])), :doc "Respond to MIDI coming in from the server, send to modular."}, :name client.core/MAIN_SITE, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Respond to MIDI coming in from the server, send to modular."}, INSTRUMENTS {:name client.core/INSTRUMENTS, :file "src/client/core.cljs", :line 74, :column 1, :end-line 74, :end-column 17, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 74, :column 6, :end-line 74, :end-column 17}}, SATELLITE {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 136, :column 7, :end-line 136, :end-column 16, :arglists (quote ([])), :doc "Take MIDI from foot switch, send up to server."}, :name client.core/SATELLITE, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Take MIDI from foot switch, send up to server."}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 184, :column 7, :end-line 184, :end-column 19, :arglists (quote ([]))}, :name client.core/on-js-reload, :variadic false, :file "src/client/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, put-latched-total {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 46, :column 7, :end-line 46, :end-column 24, :arglists (quote ([dev app]))}, :name client.core/put-latched-total, :variadic false, :file "src/client/core.cljs", :end-column 24, :method-params ([dev app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dev app]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:satellite-state :latched-set :frameBorder :ul :key :latch :content :li :iframe :width :src :div :div.row :central-state :div.col-md-12 :h2 :h3 :midi :height}, :order [:content :satellite-state :central-state :ul :li :latch :latched-set :div :div.row :div.col-md-12 :h2 :h3 :key :midi :iframe :src :width :height :frameBorder]}, :doc nil}