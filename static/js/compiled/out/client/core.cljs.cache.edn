{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name client.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, cljsjs.socket-io cljsjs.socket-io}, :uses {atom reagent.core}, :defs {hello-world {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 18, :column 7, :end-line 18, :end-column 18, :arglists (quote ([]))}, :name client.core/hello-world, :variadic false, :file "src/client/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, LIST {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 128, :column 7, :end-line 128, :end-column 11, :arglists (quote ([])), :doc "List of MIDI devices."}, :name client.core/LIST, :variadic false, :file "src/client/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "List of MIDI devices."}, note-off {:name client.core/note-off, :file "src/client/core.cljs", :line 96, :column 1, :end-line 96, :end-column 14, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 96, :column 6, :end-line 96, :end-column 14}}, note-on-latch {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 81, :column 7, :end-line 81, :end-column 20, :arglists (quote ([midi]))}, :name client.core/note-on-latch, :variadic false, :file "src/client/core.cljs", :end-column 20, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, note-name {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([pitch]))}, :name client.core/note-name, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([pitch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pitch]))}, socket {:name client.core/socket, :file "src/client/core.cljs", :line 27, :column 1, :end-line 27, :end-column 12, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 27, :column 6, :end-line 27, :end-column 12}}, HOST {:name client.core/HOST, :file "src/client/core.cljs", :line 8, :column 1, :end-line 8, :end-column 10, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 8, :column 6, :end-line 8, :end-column 10}}, LATCHING {:name client.core/LATCHING, :file "src/client/core.cljs", :line 11, :column 1, :end-line 11, :end-column 14, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 11, :column 6, :end-line 11, :end-column 14}}, note-on {:name client.core/note-on, :file "src/client/core.cljs", :line 95, :column 1, :end-line 95, :end-column 13, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 95, :column 6, :end-line 95, :end-column 13}}, note-off-latch {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 92, :column 7, :end-line 92, :end-column 21, :arglists (quote ([midi]))}, :name client.core/note-off-latch, :variadic false, :file "src/client/core.cljs", :end-column 21, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, note-off-normal {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 77, :column 7, :end-line 77, :end-column 22, :arglists (quote ([midi]))}, :name client.core/note-off-normal, :variadic false, :file "src/client/core.cljs", :end-column 22, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, app-state {:name client.core/app-state, :file "src/client/core.cljs", :line 15, :column 1, :end-line 15, :end-column 19, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 15, :column 10, :end-line 15, :end-column 19}}, show-latch {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 68, :column 7, :end-line 68, :end-column 17, :arglists (quote ([how pitch]))}, :name client.core/show-latch, :variadic false, :file "src/client/core.cljs", :end-column 17, :method-params ([how pitch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([how pitch]))}, note-on-normal {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 73, :column 7, :end-line 73, :end-column 21, :arglists (quote ([midi]))}, :name client.core/note-on-normal, :variadic false, :file "src/client/core.cljs", :end-column 21, :method-params ([midi]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([midi]))}, when-MIDI {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 37, :column 7, :end-line 37, :end-column 16, :arglists (quote ([f]))}, :name client.core/when-MIDI, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, MAIN_SITE {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 43, :column 7, :end-line 43, :end-column 16, :arglists (quote ([])), :doc "Respond to MIDI coming in from the server, send to modular."}, :name client.core/MAIN_SITE, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Respond to MIDI coming in from the server, send to modular."}, SATELLITE {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 98, :column 7, :end-line 98, :end-column 16, :arglists (quote ([])), :doc "Take MIDI from foot switch, send up to server."}, :name client.core/SATELLITE, :variadic false, :file "src/client/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Take MIDI from foot switch, send up to server."}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/nick/GITHUB/cassiel/websocket-midi-cljs/src/client/core.cljs", :line 146, :column 7, :end-line 146, :end-column 19, :arglists (quote ([]))}, :name client.core/on-js-reload, :variadic false, :file "src/client/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:frameBorder :ul :key :latch :content :li :iframe :width :src :state :div :div.row :div.col-md-12 :h2 :midi :height}, :order [:content :state :ul :li :latch :div.row :div.col-md-12 :h2 :midi :div :iframe :src :width :height :frameBorder :key]}, :doc nil}